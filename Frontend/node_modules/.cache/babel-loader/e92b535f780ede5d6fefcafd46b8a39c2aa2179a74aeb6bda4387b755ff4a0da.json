{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8080/admin'; // Update with your actual API URL\n\n// Fetch all verticals\nexport const getVerticals = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/verticals`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching verticals:\", error);\n    return [];\n  }\n};\n\n// Fetch components based on selected vertical\nexport const getComponents = async vertical => {\n  try {\n    const response = await axios.get(`${BASE_URL}/components`, {\n      params: {\n        vertical\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching components:\", error);\n    return [];\n  }\n};\n\n// Fetch activities based on selected component\nexport const getActivities = async component => {\n  try {\n    const response = await axios.get(`${BASE_URL}/activities`, {\n      params: {\n        component\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching activities:\", error);\n    return [];\n  }\n};\n\n// Fetch tasks for editing\nexport const getTasks = async activity => {\n  try {\n    const response = await axios.get(`${BASE_URL}/tasks`, {\n      params: {\n        activity\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    return [];\n  }\n};\n\n// Fetch tasks by its ID for editing\nexport const getTaskById = async taskId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/tasks/${taskId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching task by ID:', error);\n    throw error;\n  }\n};\n\n// Save the configuration\nexport const saveConfiguration = async projectConfig => {\n  try {\n    const response = await axios.post(`${BASE_URL}/configuration/save`, projectConfig);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving configuration:\", error);\n  }\n};\n\n// Update an existing task\nexport const updateTask = async (taskId, updatedTask) => {\n  try {\n    await axios.put(`${BASE_URL}/tasks/${taskId}`, updatedTask, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {\n    console.error(\"Error updating task:\", error);\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","getVerticals","response","get","data","error","console","getComponents","vertical","params","getActivities","component","getTasks","activity","getTaskById","taskId","saveConfiguration","projectConfig","post","updateTask","updatedTask","put","headers"],"sources":["D:/Eklavya/Ekalavya/Frontend/src/Components/DataCenter/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:8080/admin'; // Update with your actual API URL\r\n\r\n// Fetch all verticals\r\nexport const getVerticals = async () => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/verticals`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching verticals:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Fetch components based on selected vertical\r\nexport const getComponents = async (vertical) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/components`, { params: { vertical } });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching components:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Fetch activities based on selected component\r\nexport const getActivities = async (component) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/activities`, { params: { component } });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching activities:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Fetch tasks for editing\r\nexport const getTasks = async (activity) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/tasks`, { params: { activity } });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Fetch tasks by its ID for editing\r\nexport const getTaskById = async (taskId) => {\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/tasks/${taskId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching task by ID:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Save the configuration\r\nexport const saveConfiguration = async (projectConfig) => {\r\n    try {\r\n        const response = await axios.post(`${BASE_URL}/configuration/save`, projectConfig);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error saving configuration:\", error);\r\n    }\r\n};\r\n\r\n// Update an existing task\r\nexport const updateTask = async (taskId, updatedTask) => {\r\n    try {\r\n        await axios.put(`${BASE_URL}/tasks/${taskId}`, updatedTask, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error updating task:\", error);\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}