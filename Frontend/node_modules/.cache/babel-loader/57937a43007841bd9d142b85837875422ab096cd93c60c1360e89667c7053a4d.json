{"ast":null,"code":"var _jsxFileName = \"D:\\\\Eklavya\\\\Ekalavya\\\\Frontend\\\\src\\\\Components\\\\Admin\\\\TaskIframe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getVerticals, getComponents, getActivities, getTasks, getTaskById, updateTask, saveConfiguration } from '../DataCenter/apiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskIframe() {\n  _s();\n  const [verticals, setVerticals] = useState([]);\n  const [components, setComponents] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selectedVertical, setSelectedVertical] = useState('');\n  const [selectedComponent, setSelectedComponent] = useState('');\n  const [selectedActivity, setSelectedActivity] = useState('');\n  const [selectedTask, setSelectedTask] = useState(''); // Selected task\n  const [newVerticalName, setNewVerticalName] = useState('');\n  const [newComponentName, setNewComponentName] = useState('');\n  const [newActivityName, setNewActivityName] = useState('');\n  const [taskName, setTaskName] = useState('');\n  const [units, setUnits] = useState('');\n  const [ratePerUnit, setRatePerUnit] = useState('');\n  useEffect(() => {\n    async function fetchVerticals() {\n      const data = await getVerticals();\n      setVerticals(Array.isArray(data) ? data : []);\n    }\n    fetchVerticals();\n  }, []);\n  useEffect(() => {\n    if (selectedVertical && selectedVertical !== 'other') {\n      async function fetchComponents() {\n        const data = await getComponents(selectedVertical);\n        setComponents(Array.isArray(data) ? data : []);\n      }\n      fetchComponents();\n    }\n  }, [selectedVertical]);\n  useEffect(() => {\n    if (selectedComponent && selectedComponent !== 'other') {\n      async function fetchActivities() {\n        const data = await getActivities(selectedComponent);\n        setActivities(Array.isArray(data) ? data : []);\n      }\n      fetchActivities();\n    }\n  }, [selectedComponent]);\n  useEffect(() => {\n    if (selectedActivity && selectedActivity !== 'other') {\n      async function fetchTasks() {\n        const data = await getTasks(selectedActivity);\n        setTasks(Array.isArray(data) ? data : []);\n      }\n      fetchTasks();\n    }\n  }, [selectedActivity]);\n\n  // Fetch task details when a task is selected\n  useEffect(() => {\n    if (selectedTask && selectedTask !== 'other') {\n      async function fetchTaskDetails() {\n        const data = await getTaskById(selectedTask);\n        setTaskName(data.taskName);\n        setUnits(data.units);\n        setRatePerUnit(data.ratePerUnit);\n      }\n      fetchTaskDetails();\n    } else {\n      // Clear the fields if 'Other' is selected\n      setTaskName('');\n      setUnits('');\n      setRatePerUnit('');\n    }\n  }, [selectedTask]);\n  const handleSave = async () => {\n    const projectConfig = {\n      verticalName: selectedVertical === 'other' ? newVerticalName : selectedVertical,\n      componentName: selectedComponent === 'other' ? newComponentName : selectedComponent,\n      activityName: selectedActivity === 'other' ? newActivityName : selectedActivity,\n      taskName,\n      units,\n      ratePerUnit\n    };\n    if (selectedTask && selectedTask !== 'other') {\n      await updateTask(selectedTask, projectConfig); // Update existing task\n    } else {\n      await saveConfiguration(projectConfig); // Save new configuration\n    }\n\n    // Refresh dropdown data after saving\n    const updatedVerticals = await getVerticals();\n    setVerticals(Array.isArray(updatedVerticals) ? updatedVerticals : []);\n\n    // Clear inputs and selected states\n    setSelectedVertical('');\n    setSelectedComponent('');\n    setSelectedActivity('');\n    setSelectedTask('');\n    setNewVerticalName('');\n    setNewComponentName('');\n    setNewActivityName('');\n    setTaskName('');\n    setUnits('');\n    setRatePerUnit('');\n    alert('Configuration saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Vertical:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedVertical(e.target.value),\n        value: selectedVertical,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), verticals.map(v => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: v.verticalName,\n          children: v.verticalName\n        }, v.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 41\n        }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), selectedVertical === 'other' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Vertical Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNewVerticalName(e.target.value),\n        value: newVerticalName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), selectedVertical && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Component:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedComponent(e.target.value),\n        value: selectedComponent,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), components.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.componentName,\n          children: c.componentName\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 46\n        }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), selectedComponent === 'other' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Component Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNewComponentName(e.target.value),\n        value: newComponentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), selectedComponent && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Activity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedActivity(e.target.value),\n        value: selectedActivity,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), activities.map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: a.activityName,\n          children: a.activityName\n        }, a.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 46\n        }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), selectedActivity === 'other' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Activity Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNewActivityName(e.target.value),\n        value: newActivityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this), selectedActivity && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedTask(e.target.value),\n        value: selectedTask,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), tasks.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t.id,\n          children: t.taskName\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 41\n        }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), (selectedTask === 'other' || selectedTask) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setTaskName(e.target.value),\n          value: taskName,\n          disabled: selectedTask !== 'other'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Units:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setUnits(e.target.value),\n          value: units\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rate per Unit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setRatePerUnit(e.target.value),\n          value: ratePerUnit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskIframe, \"wFYlq8FNoa+PH6X3ft9Qlg0UTJI=\");\n_c = TaskIframe;\nexport default TaskIframe;\nvar _c;\n$RefreshReg$(_c, \"TaskIframe\");","map":{"version":3,"names":["React","useState","useEffect","getVerticals","getComponents","getActivities","getTasks","getTaskById","updateTask","saveConfiguration","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskIframe","_s","verticals","setVerticals","components","setComponents","activities","setActivities","tasks","setTasks","selectedVertical","setSelectedVertical","selectedComponent","setSelectedComponent","selectedActivity","setSelectedActivity","selectedTask","setSelectedTask","newVerticalName","setNewVerticalName","newComponentName","setNewComponentName","newActivityName","setNewActivityName","taskName","setTaskName","units","setUnits","ratePerUnit","setRatePerUnit","fetchVerticals","data","Array","isArray","fetchComponents","fetchActivities","fetchTasks","fetchTaskDetails","handleSave","projectConfig","verticalName","componentName","activityName","updatedVerticals","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","v","id","type","c","a","t","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/Eklavya/Ekalavya/Frontend/src/Components/Admin/TaskIframe.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getVerticals, getComponents, getActivities, getTasks, getTaskById, updateTask, saveConfiguration } from '../DataCenter/apiService';\r\n\r\nfunction TaskIframe() {\r\n    const [verticals, setVerticals] = useState([]);\r\n    const [components, setComponents] = useState([]);\r\n    const [activities, setActivities] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [selectedVertical, setSelectedVertical] = useState('');\r\n    const [selectedComponent, setSelectedComponent] = useState('');\r\n    const [selectedActivity, setSelectedActivity] = useState('');\r\n    const [selectedTask, setSelectedTask] = useState(''); // Selected task\r\n    const [newVerticalName, setNewVerticalName] = useState('');\r\n    const [newComponentName, setNewComponentName] = useState('');\r\n    const [newActivityName, setNewActivityName] = useState('');\r\n    const [taskName, setTaskName] = useState('');\r\n    const [units, setUnits] = useState('');\r\n    const [ratePerUnit, setRatePerUnit] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchVerticals() {\r\n            const data = await getVerticals();\r\n            setVerticals(Array.isArray(data) ? data : []);\r\n        }\r\n        fetchVerticals();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedVertical && selectedVertical !== 'other') {\r\n            async function fetchComponents() {\r\n                const data = await getComponents(selectedVertical);\r\n                setComponents(Array.isArray(data) ? data : []);\r\n            }\r\n            fetchComponents();\r\n        }\r\n    }, [selectedVertical]);\r\n\r\n    useEffect(() => {\r\n        if (selectedComponent && selectedComponent !== 'other') {\r\n            async function fetchActivities() {\r\n                const data = await getActivities(selectedComponent);\r\n                setActivities(Array.isArray(data) ? data : []);\r\n            }\r\n            fetchActivities();\r\n        }\r\n    }, [selectedComponent]);\r\n\r\n    useEffect(() => {\r\n        if (selectedActivity && selectedActivity !== 'other') {\r\n            async function fetchTasks() {\r\n                const data = await getTasks(selectedActivity);\r\n                setTasks(Array.isArray(data) ? data : []);\r\n            }\r\n            fetchTasks();\r\n        }\r\n    }, [selectedActivity]);\r\n\r\n    // Fetch task details when a task is selected\r\n    useEffect(() => {\r\n        if (selectedTask && selectedTask !== 'other') {\r\n            async function fetchTaskDetails() {\r\n                const data = await getTaskById(selectedTask);\r\n                setTaskName(data.taskName);\r\n                setUnits(data.units);\r\n                setRatePerUnit(data.ratePerUnit);\r\n            }\r\n            fetchTaskDetails();\r\n        } else {\r\n            // Clear the fields if 'Other' is selected\r\n            setTaskName('');\r\n            setUnits('');\r\n            setRatePerUnit('');\r\n        }\r\n    }, [selectedTask]);\r\n\r\n    const handleSave = async () => {\r\n        const projectConfig = {\r\n            verticalName: selectedVertical === 'other' ? newVerticalName : selectedVertical,\r\n            componentName: selectedComponent === 'other' ? newComponentName : selectedComponent,\r\n            activityName: selectedActivity === 'other' ? newActivityName : selectedActivity,\r\n            taskName,\r\n            units,\r\n            ratePerUnit\r\n        };\r\n\r\n        if (selectedTask && selectedTask !== 'other') {\r\n            await updateTask(selectedTask, projectConfig); // Update existing task\r\n        } else {\r\n            await saveConfiguration(projectConfig); // Save new configuration\r\n        }\r\n\r\n        // Refresh dropdown data after saving\r\n        const updatedVerticals = await getVerticals();\r\n        setVerticals(Array.isArray(updatedVerticals) ? updatedVerticals : []);\r\n\r\n        // Clear inputs and selected states\r\n        setSelectedVertical('');\r\n        setSelectedComponent('');\r\n        setSelectedActivity('');\r\n        setSelectedTask('');\r\n        setNewVerticalName('');\r\n        setNewComponentName('');\r\n        setNewActivityName('');\r\n        setTaskName('');\r\n        setUnits('');\r\n        setRatePerUnit('');\r\n\r\n        alert('Configuration saved successfully!');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Project Configuration</h1>\r\n\r\n            {/* Vertical dropdown */}\r\n            <div>\r\n                <label>Vertical:</label>\r\n                <select onChange={(e) => setSelectedVertical(e.target.value)} value={selectedVertical}>\r\n                    <option value=\"\">Select Vertical</option>\r\n                    {verticals.map(v => <option key={v.id} value={v.verticalName}>{v.verticalName}</option>)}\r\n                    <option value=\"other\">Other</option>\r\n                </select>\r\n            </div>\r\n\r\n            {selectedVertical === 'other' && (\r\n                <div>\r\n                    <label>New Vertical Name:</label>\r\n                    <input type=\"text\" onChange={(e) => setNewVerticalName(e.target.value)} value={newVerticalName} />\r\n                </div>\r\n            )}\r\n\r\n            {/* Component dropdown */}\r\n            {selectedVertical && (\r\n                <div>\r\n                    <label>Component:</label>\r\n                    <select onChange={(e) => setSelectedComponent(e.target.value)} value={selectedComponent}>\r\n                        <option value=\"\">Select Component</option>\r\n                        {components.map(c => <option key={c.id} value={c.componentName}>{c.componentName}</option>)}\r\n                        <option value=\"other\">Other</option>\r\n                    </select>\r\n                </div>\r\n            )}\r\n\r\n            {selectedComponent === 'other' && (\r\n                <div>\r\n                    <label>New Component Name:</label>\r\n                    <input type=\"text\" onChange={(e) => setNewComponentName(e.target.value)} value={newComponentName} />\r\n                </div>\r\n            )}\r\n\r\n            {/* Activity dropdown */}\r\n            {selectedComponent && (\r\n                <div>\r\n                    <label>Activity:</label>\r\n                    <select onChange={(e) => setSelectedActivity(e.target.value)} value={selectedActivity}>\r\n                        <option value=\"\">Select Activity</option>\r\n                        {activities.map(a => <option key={a.id} value={a.activityName}>{a.activityName}</option>)}\r\n                        <option value=\"other\">Other</option>\r\n                    </select>\r\n                </div>\r\n            )}\r\n\r\n            {selectedActivity === 'other' && (\r\n                <div>\r\n                    <label>New Activity Name:</label>\r\n                    <input type=\"text\" onChange={(e) => setNewActivityName(e.target.value)} value={newActivityName} />\r\n                </div>\r\n            )}\r\n\r\n            {/* Task dropdown */}\r\n            {selectedActivity && (\r\n                <div>\r\n                    <label>Task:</label>\r\n                    <select onChange={(e) => setSelectedTask(e.target.value)} value={selectedTask}>\r\n                        <option value=\"\">Select Task</option>\r\n                        {tasks.map(t => <option key={t.id} value={t.id}>{t.taskName}</option>)}\r\n                        <option value=\"other\">Other</option>\r\n                    </select>\r\n                </div>\r\n            )}\r\n\r\n            {/* Input fields for Task Name, Units, and Rate per Unit */}\r\n            {(selectedTask === 'other' || selectedTask) && (\r\n                <>\r\n                    <div>\r\n                        <label>Task Name:</label>\r\n                        <input type=\"text\" onChange={(e) => setTaskName(e.target.value)} value={taskName} disabled={selectedTask !== 'other'} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Units:</label>\r\n                        <input type=\"number\" onChange={(e) => setUnits(e.target.value)} value={units} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Rate per Unit:</label>\r\n                        <input type=\"number\" onChange={(e) => setRatePerUnit(e.target.value)} value={ratePerUnit} />\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <button onClick={handleSave}>Save Configuration</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskIframe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}